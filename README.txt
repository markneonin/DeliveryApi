Все пакеты и модули сервиса лежат в каталоге src, непосредственно в самом каталоге живёт база данных, дата-модули settings и status_catalog, 
вспомогательные утилиты wipe_data, create_dabase, а так же файл app, в котором инициализирован объект приложения. Пакет api содержит в себе модули с описанием роутов в ручки couriers и orders, 
соответсвенно, роутер, через который модули связанны с объектом приложения, инициализирован в файле __init__. В пакете database реализован 
функционал взаимодействия с БД, все необходимые сервису функции по манипуляции данными описаны в dbworking. Пакет models содержит модули с описанием 
дата-классов, в файле request_models также реализована валидация принимаемых системой данных, в файле tables описаны классы таблиц БД. 
Пакет services представляет логику приложения, в модуле checkers реализован фунционал по валидации данных, к которому обращаются валидаторы дата-классов из 
request_models, а так же фунции роутов. Функции модуля fabrics позволяют создавать и преобразовывать объекты. В модуле utils представлена целевая логика 
сервиса, к которой обращаются функции роутов. К сожалению, из-за нехватки времени, покрыть тестами весь функционал сервиса не удалось. Тесты написаны только для логики валидации, они находяться в пакете tests.

Инструкция по установке:

0)Склонируйте репозиторий в удобную для вас директорию, если вы читаете это, то ссылка и доступ у вас есть с:

1)В первую очередь необходимо установить зависимости, файл requirements.txt, если вы решили не создавать виртуальное окружение, 
убедитесь, что директория с внешними библиотеками есть в PATH.

2)Для работы приложению необходима БД, если одну вы сломали, а вторую потеряли, запустите утилиту create_database.

3)Создателем подразумевается использование веб-сервера uvicorn, для запуска приложения введите в терминал команду 
"uvicorn app:app"(имя модуля в котором лежит объект приложения:имя объекта), находясь в директории src, по желанию можете указать параметры запуска, например —reload

4)Тесты реализованы при помощи библиотеки pytest. ВАЖНО! Для их корректной работы нобходимо создать курьера с ID 1 и подходящий ему заказ с аналогичным ID, а так же
назначить его курьеру. Для запуска тестов введите в терминал команду "pytest", находясь в директории src.